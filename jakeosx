-- Variables
if not fs.exists("/JakeOS/") then
  fs.makeDir("/JakeOS/")
end
if fs.exists("/JakeOS/time") then
  timeType = true
else
  timeType = false
end
if fs.exists("/JakeOS/anims") then
  animations = true
else
  animations = false
end
debugMode = false
clockFreq = 1
osver = "2"

-- System Initalization
oldPull = os.pullEvent
password = false
if fs.exists("/JakeOS/.password") then
  password = true
  os.pullEvent = os.pullEventRaw
end
if not fs.isDir("/JakeOS/autorun") then
  fs.makeDir("/JakeOS/autorun")
  f = fs.open("/JakeOS/autorun/bios","w")
  f.writeLine(http.get("https://raw.github.com/jakemroman/JakeHub/master/xbios").readAll())
  f.close()
  f = fs.open("/JakeOS/autorun/protect","w")
  f.writeLine(http.get("https://raw.github.com/jakemroman/JakeHub/master/protect").readAll())
  f.close()
end

-- Default Icons
iconList = {
  ["explorer"] = function(x,y)
    term.setCursorPos(x,y)
    term.setBackgroundColor(colors.lightGray)
    term.setTextColor(colors.gray)
    write("|")
    term.setCursorPos(x,y + 1)
    write("|")
    term.setCursorPos(x,y + 2)
    write("|")
    paintutils.drawFilledBox(x + 1,y,x + 2,y + 2,colors.yellow)
  end,
  ["tasks"] = function(x,y)
    term.setCursorPos(x,y)
    term.setTextColor(colors.white)
    term.setBackgroundColor(colors.gray)
    write("-- ")
    term.setCursorPos(x,y + 1)
    term.setTextColor(colors.black)
    term.setBackgroundColor(colors.lightGray)
    write("- ")
    term.setTextColor(colors.gray)
    write("=")
    term.setTextColor(colors.black)
    term.setCursorPos(x,y + 2)
    write("--")
    term.setTextColor(colors.gray)
    write("=")
  end,
  ["shell"] = function(x,y)
    term.setCursorPos(x,y)
    term.setBackgroundColor(colors.black)
    term.setTextColor(colors.yellow)
    write(">")
    term.setTextColor(colors.white)
    write("_ ")
    term.setCursorPos(x,y + 1)
    write("   ")
    term.setCursorPos(x,y + 2)
    write("   ")
  end,
  ["file"] = function(x,y)
    paintutils.drawFilledBox(x,y,x + 2,y + 2,colors.lightGray)
    term.setCursorPos(x,y)
    term.setTextColor(colors.gray)
    write("ABC")
    term.setCursorPos(x,y + 1)
    write("---")
    term.setCursorPos(x,y + 2)
    write("---")
  end,
  ["image"] = function(x,y)
    term.setCursorPos(x,y)
    term.setBackgroundColor(colors.lightBlue)
    term.setTextColor(colors.yellow)
    write("@")
    term.setBackgroundColor(colors.lightBlue)
    write("  ")
    term.setCursorPos(x,y + 1)
    write("   ")
    term.setCursorPos(x,y + 2)
    term.setBackgroundColor(colors.lime)
    term.setTextColor(colors.green)
    write("---")
  end,
  ["script"] = function(x,y)
    term.setCursorPos(x,y)
    term.setBackgroundColor(colors.lightGray)
    term.setTextColor(colors.gray)
    paintutils.drawFilledBox(x,y,x + 2,y + 2,colors.lightGray)
    term.setBackgroundColor(colors.yellow)
    term.setCursorPos(x + 1,y)
    write("/>")
    term.setCursorPos(x + 1,y + 1)
    write("#")
    term.setCursorPos(x,y + 2)
    write("</")
  end,
}

-- Functions
function center(str,ln)
  local curX,curY = term.getCursorPos()
  local maxX,maxY = term.getSize()
  maxX = maxX / 2
  maxX = maxX - (#str / 2)
  if ln then
    term.setCursorPos(maxX,ln)
  else
    term.setCursorPos(maxX,curY)
  end
  write(str)
end
function crash(errorStr)
  if not errorStr then
    errorStr = "no information"
  end
  errorStr = string.lower(errorStr)
  --if not reason then
  local reason = nil
  if string.find(errorStr,"attempt to call nil") then
    reason = "Non existant value/function was called on"
  else
    reason = "Unknown error!"
  end
 -- end
  term.setBackgroundColor(colors.blue)
  term.clear()
  paintutils.drawLine(2,2,50,2,colors.white)
  term.setTextColor(colors.gray)
  center("JakeOS X Crash",2)
  term.setCursorPos(2,4)
  term.setBackgroundColor(colors.blue)
  term.setTextColor(colors.white)
  write("JakeOS X seems to have crashed.")
  term.setCursorPos(2,6)
  write("Error reason:")
  term.setCursorPos(2,7)
  term.setTextColor(colors.lightGray)
  write(reason)
  term.setCursorPos(2,9)
  term.setTextColor(colors.white)
  write("You could try:")
  term.setCursorPos(4,11)
  write("- Rebooting this computer")
  term.setCursorPos(4,12)
  write("- Reinstalling the operating system")
  term.setCursorPos(4,13)
  write("- Opening an issue on GitHub")
  term.setCursorPos(2,15)
  write("Error:")
  term.setCursorPos(2,16)
  term.setTextColor(colors.lightGray)
  write(errorStr)
  term.setTextColor(colors.white)
  term.setCursorPos(2,18)
  term.setBackgroundColor(colors.lightGray)
  term.setTextColor(colors.gray)
  write(" Reboot ")
  term.setCursorPos(45,18)
  write(" Help ")
  while true do
    e,c,x,y = os.pullEvent("mouse_click")
    if x >= 2 and x <= 10 and y == 18 then
      break
    end
    if x >= 45 and x <= 50 and y == 18 then
      term.setBackgroundColor(colors.white)
      term.clear()
      term.setCursorPos(2,2)
      term.setTextColor(colors.gray)
      center("Scanning...")
      if not fs.exists("/JakeOS/copy") then
        center("Could not find operating system clean install!")
        sleep(1)
        break
      end
      f = fs.open("/JakeOS/copy","r")
      local copy = f.readAll()
      f.close()
      f = fs.open(shell.getRunningProgram(),"r")
      local curr = f.readAll()
      f.close()
      term.setBackgroundColor(colors.white)
      term.clear()
      term.setCursorPos(2,2)
      term.setTextColor(colors.black)
      if copy == curr then
        write("Creating error report... ")
        f = fs.open("/report","w")
        f.writeLine("-- JakeOS X Error Report --")
        f.writeLine(errorStr)
        f.writeLine("-- Information --")
        f.writeLine("ID: "..tostring(os.getComputerID()))
        f.writeLine("OS Release: "..osver)
        f.writeLine("-- Advanced --")
        f.writeLine(curr)
        f.close()
        write("Done!")
        term.setCursorPos(2,4)
        term.setTextColor(colors.gray)
        shell.run("pastebin put report")
        term.setCursorPos(2,17)
        term.setTextColor(colors.black)
        write("Please provide the pastebin adress in a GitHub")
        term.setCursorPos(2,18)
        write("issue on the repository: jakemroman/JakeHub")
        sleep(80)
        os.reboot()
      else
        center("The operating system is modified!")
        center("Installing original version of OS..")
        fs.delete("/startup")
        fs.copy("/JakeOS/copy","/startup")
        sleep(3)
        os.reboot()
      end
    end
  end
  os.reboot()
end
function graphics(graphicName)
  if not http then
    return nil
  end
  if fs.exists("/.graphics/"..graphicName) then
    return paintutils.loadImage("/.graphics/"..graphicName)
  end
  graphHttp = http.get("https://raw.github.com/jakemroman/JakeHub/master/graphic-"..graphicName)
  if not graphHttp then
    return nil
  end
  f = fs.open("/JakeOS/graphics/"..graphicName,"w")
  local graphicLoad = graphHttp.readAll()
  f.writeLine(graphicLoad)
  f.close()
  return paintutils.loadImage("/JakeOS/graphics/"..graphicName)
end
function debug(str)
  if not debugMode then
    return
  end
  local oldX,oldY = term.getCursorPos()
  if term.getBackgroundColor then
    local oldBg = term.getBackgroundColor()
    local oldTxt = term.getTextColor()
  end
  term.setCursorPos(1,1)
  term.setBackgroundColor(colors.white)
  term.clearLine()
  term.setCursorPos(1,1)
  term.setTextColor(colors.black)
  write(str)
  if oldBg and oldTxt then
    term.setBackgroundColor(oldBg)
    term.setTextColor(oldTxt)
  end
  term.setCursorPos(oldX,oldY)
end

-- Pre Initalization
local apiList = fs.list("/JakeOS/apis")
for i=1,#apiList do
  os.loadAPI("/JakeOS/apis/"..apiList[i])
end
term.clear()
local autorunList = fs.list("/JakeOS/autorun")
if #autorunList > 0 then
  for i=1,#autorunList do
    shell.run("/JakeOS/autorun/"..autorunList[i])
  end
end

-- Testing
if not graphicals then
  crash("Graphicals API not detected.")
end
if not fs.exists("/JakeOS/copy") then
  fs.copy("/startup","/JakeOS/copy")
end
oldColors = colors
newColors = {
  ["green"] = colors.gray,
  ["brown"] = colors.gray,
  ["black"] = colors.black,
  ["pink"] = colors.lightGray,
  ["yellow"] = colors.lightGray,
  ["orange"] = colors.lightGray,
  ["magenta"] = colors.gray,
  ["purple"] = colors.gray,
  ["cyan"] = colors.lightGray,
  ["red"] = colors.lightGray,
  ["white"] = colors.white,
  ["lightBlue"] = colors.lightGray,
  ["blue"] = colors.gray,
  ["lightGray"] = colors.gray,
  ["gray"] = colors.black,
  ["lime"] = colors.lightGray,
}

-- OS
function operatingSys()
  paintutils.drawImage(graphics("background"),1,1)
  paintutils.drawImage(graphics("x"),1,1)
  sleep(1)
  if not term.getBackgroundColor then
    oldTextColor = term.setTextColor
    oldBackgroundColor = term.setBackgroundColor
    curBackgroundColor = colors.black
    curTextColor = colors.black
    function newTextColor(setColor)
      curTextColor = setColor
      oldTextColor(setColor)
    end
    function newBackgroundColor(setColor)
      curBackgroundColor = setColor
      oldBackgroundColor(setColor)
    end
    function newGetTextColor()
      return curTextColor
    end
    function newGetBackgroundColor()
      return curBackgroundColor
    end
    _G.term.setBackgroundColor = nil
    _G.term.setBackgroundColour = nil
    _G.term.setTextColor = nil
    _G.term.setTextColour = nil
    _G.term.setBackgroundColor = newBackgroundColor
    _G.term.setBackgroundColour = newBackgroundColor
    _G.term.setTextColor = newTextColor
    _G.term.setTextColour = newTextColor
    _G.term.getBackgroundColor = newGetBackgroundColor
    _G.term.getBackgroundColour = newGetBackgroundColor
    _G.term.getTextColor = newGetTextColor
    _G.term.getTextColour = newGetTextColor
  end
  --if password then
    --_G.colors = nil
    --colors = newColors
  --end
  term.setBackgroundColor(colors.white)
  term.clear()
  term.setTextColor(colors.black)
  if not fs.isDir("/JakeOS/Desktop") then
    fs.makeDir("/JakeOS/Desktop")
  end
  while true do
    if not debugMode then
      term.current().setVisible(false)
    end
    term.setBackgroundColor(colors.white)
    term.clear()
    f = fs.open("/JakeOS/time","r")
    local timezone = f.readAll()
    f.close()
    if tonumber(timezone) >= 0 then
      h = http.get("http://www.timeapi.org/utc/in+"..timezone.."+hours")
      if not h then
        time = "ErrorT??:??:??+00:00"
      else
        time = h.readAll()
        h.close()
      end
    else
      h = http.get("http://www.timeapi.org/utc/back+"..string.sub(timezone,2,#timezone).."+hours")
      if not h then
        time = "ErrorT??:??:??+00:00"
      else
        time = h.readAll()
        h.close()
      end
    end
    time = string.sub(time,(string.find(time,"T")+1),(string.find(time,"+")-1))
    term.setCursorPos(49 - #time,19)
    term.setBackgroundColor(colors.lightGray)
    term.setTextColor(colors.black)
    write(" "..time.." ")
    term.setCursorPos(2,19)
    term.setBackgroundColor(colors.gray)
    term.setTextColor(colors.lightGray)
    write(" /\\ ")
    local desktop = fs.list("/JakeOS/Desktop")
    local clicks = {}
    for i=1,#desktop do
      clicks[#clicks + 1] = {}
      f = fs.open("/JakeOS/Desktop/"..desktop[i],"r")
      local imgX = tonumber(f.readLine())
      local imgY = tonumber(f.readLine())
      local prog = f.readLine()
      local icon = f.readLine()
      f.close()
      clicks[#clicks].x = imgX
      clicks[#clicks].y = imgY
      clicks[#clicks].program = prog
      clicks[#clicks].icon = icon
      if not icon then
        paintutils.drawFilledBox(imgX,imgY,imgX + 2,imgY + 2,colors.black)
      elseif iconList[icon] then
        iconList[icon](imgX,imgY)
      elseif paintutils.loadImage(icon) then
        paintutils.drawImage(paintutils.loadImage(icon),imgX,imgY)
      else
        paintutils.drawFilledBox(imgX,imgY,imgX + 2,imgY + 2,colors.gray)
      end
    end
    term.current().setVisible(true)
    if password then
      --_G.colors = nil
      --colors = oldColors
      paintutils.drawFilledBox(1,5,51,9,colors.lightGray)
      term.setCursorPos(1,6)
      term.setTextColor(colors.gray)
      center("Please sign in")
      while true do
        paintutils.drawLine(1,8,51,8,colors.gray)
        term.setCursorPos(2,8)
        term.setTextColor(colors.white)
        input = sha256.sha256(read("*"))
        f = fs.open("/JakeOS/.password","r")
        local passwordSha = f.readAll()
        f.close()
        if input == passwordSha then
          break
        end
      end
      password = false
      os.pullEvent = oldPull
    end
    timer = os.startTimer(clockFreq)
    e,c,x,y = os.pullEvent()
    if e ~= "timer" then
      os.cancelTimer(timer)
    end
    if e == "mouse_click" then
      if x >= 2 and x <= 6 and y == 19 then
        --error("works")
        local y = 20
        for i=1,19 do
          y = y - 1
          term.setCursorPos(1,y)
          term.setBackgroundColor(colors.lightGray)
          term.clearLine()
          term.setCursorPos(2,y - 1)
          term.setBackgroundColor(colors.gray)
          term.setTextColor(colors.lightGray)
          write(" /\\ ")
          if animations then
            sleep(0)
          end
        end
        if animations then
          sleep(0.15)
        end
        local powerMenu = true
        while powerMenu do
          term.setBackgroundColor(colors.white)
          term.clear()
          term.setCursorPos(51,1)
          term.setTextColor(colors.white)
          term.setBackgroundColor(colors.red)
          write("X")
          paintutils.drawLine(1,1,50,1,colors.lightGray)
          term.setCursorPos(2,1)
          term.setTextColor(colors.black)
          write("Start")
          term.setCursorPos(2,3)
          term.setBackgroundColor(colors.white)
          term.setTextColor(colors.gray)
          write("Settings")
          term.setCursorPos(2,4)
          write("Update")
          term.setCursorPos(2,5)
          write("Power")
          term.setCursorPos(2,6)
          write("Password")
          e,c,x,y = os.pullEvent("mouse_click")
          if x == 51 and y == 1 then
            break
          end
          if x >= 2 and x <= 10 and y == 6 then
            for i=1,1 do
              term.setBackgroundColor(colors.white)
              term.clear()
              term.setCursorPos(1,1)
              term.setBackgroundColor(colors.lightGray)
              term.clearLine()
              term.setCursorPos(51,1)
              term.setBackgroundColor(colors.red)
              term.setTextColor(colors.white)
              write("X")
              term.setCursorPos(2,1)
              term.setBackgroundColor(colors.lightGray)
              term.setTextColor(colors.black)
              write("Password Manager")
              term.setCursorPos(2,3)                
              term.setBackgroundColor(colors.lightGray)
              term.setTextColor(colors.gray)
              write("Remove Password")
              term.setCursorPos(2,5)
              write("Set Password")
              while true do
                e,c,x,y = os.pullEvent("mouse_click")
                if x >= 2 and x <= 20 then
                  if y == 3 then
                    term.setCursorPos(2,3)
                    term.setBackgroundColor(colors.green)
                    term.setTextColor(colors.gray)
                    write("Remove Password")
                    sleep(0.2)
                    fs.delete("/JakeOS/.password")
                    term.setCursorPos(2,3)
                    term.setBackgroundColor(colors.lightGray)
                    term.setTextColor(colors.gray)
                    write("Remove Password")
                  end
                  if y == 5 then
                    term.setCursorPos(2,5)
                    term.setBackgroundColor(colors.green)
                    term.setTextColor(colors.gray)
                    write("Set Password")
                    sleep(0.2)
                    term.setCursorPos(2,5)
                    term.setBackgroundColor(colors.lightGray)
                    write("Set Password")
                    term.setCursorPos(2,18)
                    term.setBackgroundColor(colors.white)
                    term.setTextColor(colors.black)
                    write("Password: ")
                    term.setTextColor(colors.lightGray)
                    f = fs.open("/JakeOS/.password","w")
                    f.write(sha256.sha256(read("*")))
                    f.close()
                    term.setCursorPos(2,18)
                    term.clearLine()
                  end
                end
                if x == 51 and y == 1 then
                  break
                end
              end
            end
          end
          if x >= 2 and x <= 7 and y == 5 then
            term.setBackgroundColor(colors.white)
            term.clear()
            term.setCursorPos(2,2)
            term.setTextColor(colors.black)
            write("Power:")
            term.setCursorPos(2,4)
            term.setTextColor(colors.gray)
            term.setBackgroundColor(colors.lightGray)
            write("Shutdown")
            term.setCursorPos(2,6)
            write("Reload")
            term.setCursorPos(2,8)
            write("Reboot")
            term.setCursorPos(2,10)
            write("Cancel")
            while true do
              e,c,x,y = os.pullEvent("mouse_click")
              if x >= 2 and x <= 10 and y == 4 then
                graphicals.fadeOut()
                os.shutdown()
              end
              if x >= 2 and x <= 8 and y == 6 then
                shell.run("/startup")
              end
              if x >= 2 and x <= 8 and y == 8 then
                graphicals.fadeOut()
                sleep(2)
                graphicals.fadeIn()
                os.reboot()
              end
              if x >= 2 and x <= 6 and y == 10 then
                break
              end
            end
          end
          if x >= 2 and x <= 8 and y == 4 then
            term.setBackgroundColor(colors.white)
            term.clear()
            term.setCursorPos(2,2)
            term.setTextColor(colors.black)
            write("Checking for updates")
            f = fs.open("/startup","r")
            local curData = f.readAll()
            f.close()
            h = http.get("https://raw.github.com/jakemroman/JakeHub/master/jakeosx")
            if not h then
              term.setCursorPos(2,4)
              term.setTextColor(colors.red)
              write("Cannot connect.")
              sleep(2)
            else
              local newData = h.readAll()
              h.close()
              if newData ~= curData then
                term.setCursorPos(2,4)
                term.setTextColor(colors.lime)
                write("Updating!")
                sleep(1.5)
                loadstring(http.get("https://raw.github.com/jakemroman/JakeHub/master/jakeosxupdater").readAll())()
              else
                term.setCursorPos(2,4)
                term.setTextColor(colors.blue)
                write("Up to date")
                sleep(1)
              end
            end
          end
          if x >= 2 and x <= 10 and y == 3 then
            while true do
              term.setBackgroundColor(colors.white)
              term.clear()
              term.setCursorPos(1,1)
              term.setBackgroundColor(colors.lightGray)
              term.clearLine()
              term.setCursorPos(51,1)
              term.setBackgroundColor(colors.red)
              term.setTextColor(colors.white)
              write("X")
              term.setCursorPos(2,1)
              term.setBackgroundColor(colors.lightGray)
              term.setTextColor(colors.black)
              write("Settings")
              term.setCursorPos(2,3)
              term.setBackgroundColor(colors.white)
              term.setTextColor(colors.black)
              write("Animations")
              term.setTextColor(colors.gray)
              if fs.exists("/JakeOS/anims") then
                term.setCursorPos(48,3)
                term.setBackgroundColor(colors.lime)
                write("ON")
              else
                term.setCursorPos(47,3)
                term.setBackgroundColor(colors.red)
                write("OFF")
              end
              term.setCursorPos(2,5)
              term.setBackgroundColor(colors.white)
              term.setTextColor(colors.black)
              write("[WIP] Time Area")
              term.setTextColor(colors.gray)
              term.setBackgroundColor(colors.lightGray)
              f = fs.open("/JakeOS/time","r")
              time = f.readAll()
              f.close()
              term.setCursorPos(50 - #time,5)
              write(time)
              term.setCursorPos(2,7)
              term.setBackgroundColor(colors.white)
              term.setTextColor(colors.black)
              write("Speed Mode")
              term.setTextColor(colors.gray)
              if fs.exists("/JakeOS/speed") then
                term.setCursorPos(48,7)
                term.setBackgroundColor(colors.lime)
                write("ON")
              else
                term.setCursorPos(47,7)
                term.setBackgroundColor(colors.red)
                write("OFF")
              end
              e,c,x,y = os.pullEvent("mouse_click")
              if x == 51 and y == 1 then
                break
              end
              if x >= 2 and x <= 50 then
                if y == 7 then
                  if fs.exists("/JakeOS/speed") then
                    fs.delete("/JakeOS/speed")
                  else
                    f = fs.open("/JakeOS/speed","w")
                    f.writeLine("true")
                    f.close()
                  end
                end
                if y == 5 then
                  f = fs.open("/JakeOS/time","r")
                  time = f.readAll()
                  f.close()
                  while true do
                    term.setBackgroundColor(colors.white)
                    term.clear()
                    term.setCursorPos(2,2)
                    term.setTextColor(colors.black)
                    term.setBackgroundColor(colors.lightGray)
                    write(" +1 ")
                    term.setCursorPos(2,4)
                    write(" -1 ")
                    term.setCursorPos(2,18)
                    write("Done")
                    term.setCursorPos(2,6)
                    term.setBackgroundColor(colors.white)
                    write("UTC "..time)
                    term.setCursorPos(2,7)
                    term.setTextColor(colors.gray)
                    write("Negative Doesn't Work")
                    e,c,x,y = os.pullEvent("mouse_click")
                    if y == 2 then
                      time = time + 1
                    end
                    if y == 4 then
                      time = time - 1
                    end
                    if y == 18 then
                      break
                    end
                  end
                  f = fs.open("/JakeOS/time","w")
                  f.write(tostring(time))
                  f.close()
                end
                if y == 3 then
                  if fs.exists("/JakeOS/anims") then
                    fs.delete("/JakeOS/anims")
                  else
                    f = fs.open("/JakeOS/anims","w")
                    f.write("true")
                    f.close()
                  end
                end
              end
            end
          end
        end
        term.setBackgroundColor(colors.lightGray)
        term.clear()
        if animations then
          sleep(0.15)
        end
        for i=1,19 do
          term.setBackgroundColor(colors.white)           
          term.setCursorPos(1,i)
          term.clearLine()
          term.setCursorPos(2,i)
          term.setBackgroundColor(colors.gray)
          term.setTextColor(colors.lightGray)
          write(" /\\ ")
          term.setCursorPos(1,i - 1)
          term.setBackgroundColor(colors.white)
          write("        ")
          if animations then
            sleep(0)
          end
        end
      end
      for i=1,#clicks do
        if x >= (clicks[i].x) and x <= (clicks[i].x + 2) and y >= (clicks[i].y) and y <= (clicks[i].y + 2) then
          term.setBackgroundColor(colors.black)
          term.clear()
          term.setCursorPos(1,1)
          term.setTextColor(colors.white)
          shell.run(clicks[i].program)
        end
      end
    end
  end
end

JakeOS.startProcess(operatingSys,"JakeOS X")
JakeOS.handleProcesses()
term.setBackgroundColor(colors.black)
term.clear()
term.setCursorPos(1,1)
term.setTextColor(colors.yellow)
print("You have exited JakeOS")
