-- Graphicals API Embedded! | Copyright Jake Roman 2015

function loading(sTime)
  bit = 0
  if not sTime then
    local sTime = 2
  end
  for i=1,sTime do
    for p=1,8 do
      sleep(0.1)
      term.setCursorPos(25,9)
      term.setBackgroundColor(colors.lightGray)
      write("   ")
      term.setCursorPos(25,10)
      write(" ")
      term.setCursorPos(27,10)
      write(" ")
      term.setCursorPos(25,11)
      write("   ")
      if p == 1 then
        term.setCursorPos(25,9)
      end
      if p == 2 then
        term.setCursorPos(26,9)
      end
      if p == 3 then
        term.setCursorPos(27,9)
      end
      if p == 4 then
        term.setCursorPos(27,10)
      end
      if p == 5 then
        term.setCursorPos(27,11)
      end
      if p == 6 then
        term.setCursorPos(26,11)
      end
      if p == 7 then
        term.setCursorPos(25,11)
      end
      if p == 8 then
        term.setCursorPos(25,10)
      end
      term.setBackgroundColor(colors.blue)
      write(" ")
      if p == 1 then
        term.setCursorPos(25,10)
      end
      if p == 2 then
        term.setCursorPos(25,9)
      end
      if p == 3 then
        term.setCursorPos(26,9)
      end
      if p == 4 then
        term.setCursorPos(27,9)
      end
      if p == 5 then
        term.setCursorPos(27,10)
      end
      if p == 6 then
        term.setCursorPos(27,11)
      end
      if p == 7 then
        term.setCursorPos(26,11)
      end
      if p == 8 then
        term.setCursorPos(25,11)
      end
      term.setBackgroundColor(colors.lightBlue)
      write(" ")
    end
  end
end
function fadeIn()
  term.setBackgroundColor(colors.black)
  term.clear()
  sleep(0.1)
  term.setBackgroundColor(colors.gray)
  term.clear()
  sleep(0.1)
  term.setBackgroundColor(colors.lightGray)
  term.clear()
  sleep(0.1)
  term.setBackgroundColor(colors.white)
  term.clear()
  sleep(0.1)
end
function rainbowPrint(str)
  color = 0
  for i=1,#str do
    color = color + 1
    if color == 1 then
      term.setTextColor(colors.red)
    end
    if color == 2 then
      term.setTextColor(colors.orange)
    end
    if color == 3 then
      term.setTextColor(colors.yellow)
    end
    if color == 4 then
      term.setTextColor(colors.lime)
    end
    if color == 5 then
      term.setTextColor(colors.blue)
      color = 0
    end
    write(string.sub(str,i,i))
  end
  print("")
end
function box(xPos1,yPos1,xPos2,yPos2,sColor,inCol)
  paintutils.drawFilledBox(xPos1,yPos1,xPos2,yPos2,sColor)
  if inCol then
    paintutils.drawFilledBox(xPos1 + 1,yPos1 + 1,xPos2 - 1,yPos2 - 1,inCol)
  end
end
function center(str,rainbow)
  maxX,maxY = term.getSize()
  curX,curY = term.getCursorPos()
  maxX = maxX / 2
  subX = #str / 2
  maxX = maxX - subX
  term.setCursorPos(maxX,curY)
  if rainbow then
    rainbowPrint(str)
  else
    print(str)
  end
end
function fadeOut()
  term.setBackgroundColor(colors.white)
  term.clear()
  sleep(0.2)
  term.setBackgroundColor(colors.lightGray)
  term.clear()
  sleep(0.2)
  term.setBackgroundColor(colors.gray)
  term.clear()
  sleep(0.2)
  term.setBackgroundColor(colors.black)
  term.clear()
  sleep(0.2)
end
function fadeTo(sColor)
  for i=1,19 do
    term.setCursorPos(1,i)
    term.setBackgroundColor(sColor)
    term.clearLine()
    sleep(0.1)
  end
end
function loadBar(col1,col2)
  if not col1 then col1 = colors.red end
  if not col2 then col2 = colors.lime end
  curX,curY = term.getCursorPos()
  term.setCursorPos(2,curY)
  term.setBackgroundColor(col1)
  for i=1,49 do
    write(" ")
  end
  term.setCursorPos(2,curY)
  term.setBackgroundColor(col2)
  for i=1,49 do
    sleep(0)
    write(" ")
  end
end
function clearArea(xPos1,yPos1,xPos2,yPos2)
  for curY=yPos1,yPos2 do
    for curX=xPos1,xPos2 do
      term.setCursorPos(curX,curY)
      write(" ")
    end
  end
end
fadeIn()
if not fs.exists("/qConfig") then
  f = fs.open("/qConfig","w")
  f.writeLine([[
qConfig = {
  loading = {
    color1 = colors.blue,
    color2 = colors.lightBlue,
    textCol1 = colors.black,
    textCol2 = colors.gray,
    char = "+",
  },
  desktop = {
    topBar = colors.lightGray,
    barText = colors.black,
    bgCol = colors.white,
    time = colors.gray,
    start = colors.gray,
    startText = colors.white,
  },
}
  ]])
  f.close()
  term.setTextColor(colors.gray)
  term.clear()
  term.setBackgroundColor(colors.white)
  term.clear()
  term.setCursorPos(1,2)
  center("Hey there!")
  sleep(0.3)
  center("Thanks for buying a QuantumSounds unit!")
  sleep(1.3)
  center("I'll setup the system for you now.")
  sleep(1.5)
  center("Alright!")
  sleep(0.6)
  os.reboot()
end
shell.run("/qConfig")
term.current().setVisible(false)
term.setCursorPos(1,1)
for y=1,19 do
  for x=1,51 do
    term.setCursorPos(x,y)
    if math.random(1,2) == 2 then
      term.setTextColor(qConfig.loading.color2)
    else
      term.setTextColor(qConfig.loading.color1)
    end
    write(qConfig.loading.char)
  end 
end
term.setCursorPos(1,9)
term.setTextColor(qConfig.loading.textCol1)
center("QuantumSounds")
term.setTextColor(qConfig.loading.textCol2)
center("A new stage of audio.")
term.current().setVisible(true)
sleep(1.3)
while true do
  term.setBackgroundColor(qConfig.desktop.bgCol)
  term.clear()
  term.setBackgroundColor(qConfig.desktop.topBar)
  term.setCursorPos(1,1)
  term.clearLine()
  local time = textutils.formatTime(os.time(),false)
  term.setCursorPos(51 - #time,1)
  term.setTextColor(qConfig.desktop.time)
  print(time)
  term.setCursorPos(2,1)
  term.setTextColor(qConfig.desktop.barText)
  write("Start")
  timer = os.startTimer(0.3)
  e,c,x,y = os.pullEvent()
  if e ~= "timer" then
    os.cancelTimer(timer)
  end
  if e == "mouse_click" then
    if x >= 2 and x <= 6 and y == 1 then
      --error("We're getting somewhere")
      term.setBackgroundColor(qConfig.desktop.start)
      clearArea(1,2,10,7)
      term.setCursorPos(2,3)
      term.setTextColor(qConfig.desktop.startText)
      write("Player")
      term.setCursorPos(2,4)
      write("Update")
      term.setCursorPos(2,5)
      write("Shutdown")
      e,c,x,y = os.pullEvent("mouse_click")
      if x >= 1 and x <= 10 then
        if y == 3 then
          shell.run("/note")
        end
        if y == 4 then
          h = http.get("https://raw.github.com/jakemroman/JakeHub/master/qsounds")
          if not h then
            term.setBackgroundColor(colors.white)
            term.clear()
            term.setTextColor(colors.red)
            term.setCursorPos(1,2)
            center("Failed!")
            sleep(1)
          else
            term.setBackgroundColor(colors.white)
            term.clear()
            loading(1)
            data = h.readAll()
            h.close()
            f = fs.open("startup","r")
            curData = f.readAll()
            f.close()
            if data ~= curData then
              f = fs.open("startup","w")
              f.writeLine(data)
              f.close()
              term.setBackgroundColor(colors.white)
              term.clear()
              term.setCursorPos(2,2)
              term.setTextColor(colors.lime)
              center("Updated")
              sleep(1)
              os.reboot()
            else
              term.setBackgroundColor(colors.white)
              term.clear()
              term.setCursorPos(1,2)
              term.setTextColor(colors.gray)
              center("Up to date.")
            end
            os.pullEvent('key')
          end
        end
        if y == 5 then
          fadeOut()
          os.shutdown()
        end
      end
    end
  end
end
